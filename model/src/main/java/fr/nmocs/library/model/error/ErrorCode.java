package fr.nmocs.library.model.error;

public enum ErrorCode {

	ERROR("ERROR"),

	// ===== TECHNICAL

	USER_NOT_FOUND("LTE0000"),

	USER_DUPLICATED_EMAIL("LTE0001"),

	BOOK_NOT_FOUND("LTE0002"),

	BOOKSAMPLE_NOT_FOUND("LTE0003"),

	LOAN_NOT_FOUND("LTE0004"),

	RESERVATION_NULL("LTE0005"),

	RESERVATION_RESERVER_NULL("LTE0006"),

	RESERVATION_BOOK_NULL("LTE0007"),

	RESERVATION_RESERVER_NOTFOUND("LTE0008"),

	RESERVATION_BOOKSAMPLE_NOTFOUND("LTE0009"),

	// ===== BUSINESS

	USER_UNSETTED("LBE0000"),

	USER_UNSETTED_LASTNAME("LBE0001"),

	USER_UNSETTED_FIRSTNAME("LBE0002"),

	USER_UNSETTED_PASSWORD("LBE0003"),

	USER_UNSETTED_EMAIL("LBE0004"),

	USER_OVERSIZED_LASTNAME("LBE0005"),

	USER_OVERSIZED_FIRSTNAME("LBE0006"),

	USER_OVERSIZED_PASSWORD("LBE0007"),

	USER_OVERSIZED_EMAIL("LBE0008"),

	USER_DOESNT_EXIST("LBE0009"),

	BOOK_UNSETTED("LBE0010"),

	BOOK_UNSETTED_TITLE("LBE0011"),

	BOOK_UNSETTED_AUTHOR("LBE0012"),

	BOOK_DOESNT_EXIST("LBE0013"),

	BOOK_OVERSIZED_AUTHOR("LBE0014"),

	BOOK_OVERSIZED_TITLE("LBE0015"),

	BOOKSAMPLE_UNSETTED_BOOKID("LBE0016"),

	BOOKSAMPLE_UNSETTED("LBE0017"),

	BOOKSAMPLE_DOESNT_EXIST("LBE0018"),

	BOOKSAMPLE_UNEXISTING_REFERENCED_BOOK("LBE0019"),

	LOAN_UNSETTED_BOOKSAMPLEID("LBE0020"),

	LOAN_UNEXISTING_REFERENCED_BOOKSAMPLE("LBE0021"),

	LOAN_UNSETTED_BORROWERID("LBE0022"),

	LOAN_UNEXISTING_REFERENCED_BORROWER("LBE0023"),

	LOAN_UNSETTED("LBE0024"),

	LOAN_AMBIGOUS_RETURNDATE("LBE0025"),

	LOAN_DOESNT_EXIST("LBE0026"),

	LOAN_ALREADY_BORROWED_BOOKSAMPLE("LBE0027"),

	LOAN_BOOKSAMPLE_UNAVAILABLE("LBE0028"),

	LOAN_USER_UNAVAILABLE("LBE0029"),

	TOKEN_NOT_VALID("LBE0030"),

	USER_NOT_ACTIVE("LBE0031"),

	PASSWORD_DOESNT_MATCH("LBE0032"),

	RESERVATION_ALREADY_EXIST("LBE0033"),

	RESERVATION_NB("LBE0034"),

	RESERVATION_RESERVER_ALREADY_BORROWING("LBE0035");

	private String id;

	private ErrorCode (String id) {
		this.id = id;
	}

	/**
	 * @return the id
	 */
	public String getId() {
		return id;
	}

	@Override
	public String toString() {
		return id;
	}
}
